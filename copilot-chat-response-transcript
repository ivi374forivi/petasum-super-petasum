GitHub has a feature called **"Organization-wide Projects"** or **"Cross-repo Issues"** that allows you to track issues across multiple repositories within an organization. However, if you want an issue itself to be organization-wide, GitHub currently doesn't have a specific feature for "organization-wide issues." Instead, you can use the following strategies:

### 1. **Centralized Repository for Organization-wide Issues**
   - Create a dedicated repository in your organization specifically for tracking organization-wide issues (e.g., `organization/issues`).
   - Post the issue in that repository and reference it in other repositories using links.

### 2. **Use Issue Templates and Labels**
   - Set up an **issue template** in all repositories to guide contributors to file organization-wide issues in the central repository.
   - Use consistent labels like `org-wide` to tag issues that are relevant to the entire organization.

### 3. **Cross-link Issues**
   - If the issue affects multiple repositories, link related issues together by mentioning them using `#<issue-number>` or `owner/repo#<issue-number>`.

### 4. **GitHub Discussions**
   - If your organization has GitHub Discussions enabled, consider creating a discussion thread for organization-wide concerns rather than using issues.

### 5. **GitHub Projects**
   - Use organization-level **GitHub Projects** to track issues across multiple repositories.
   - Add issues from different repositories to a single **project board** to make it easier to manage.

### 6. **Automation with GitHub Actions**
   - Set up workflows to notify other repositories or teams when an organization-wide issue is created.

Here are concise best practices and ready-to-use templates to make “organization‑wide” work effective on GitHub.

Best practices
- Create a central “meta” repo for org-wide issues (e.g., your-org/org-issues). Keep process docs, labels, and workflows here.
- Use an org-level .github repo to share issue templates, discussion templates, and config across all repos.
- Standardize labels and severity: org-wide, initiative, epic, rfc, incident, sev-1/2/3, dependency, blocked, needs-triage.
- Track org-wide issues in an organization Project (Projects v2). Use fields like Status, Priority, Owner, Target date. Auto-add issues via Actions.
- Cross-link work: reference owner/repo#123 and use task lists - [ ] owner/repo#123 so progress rolls up.
- Gatekeep with templates: require impacted repos, owners, success criteria, timeline, risks, and comms.
- Agree on triage SLAs and ownership (a dedicated “Org Triage” team).
- Use Discussions for proposals (RFCs) and convert accepted proposals to issues.
- Automate routine steps: auto-label, add to org project, ping triage team, and create follow-up tracking tasks.

Where to put these
- Org-wide issue creation: central org-issues repo.
- Shared templates: org-level .github repository.
- Tracking: Organization Project (Projects v2).

Templates you can copy-paste

1) Issue form: Org-wide initiative
Path: .github/ISSUE_TEMPLATE/org-wide-initiative.yml

name: Org-wide initiative
description: Propose and track an initiative impacting multiple repositories/teams.
title: "[Org-wide] <short summary>"
labels: [org-wide, initiative, epic, needs-triage]
body:
  - type: markdown
    attributes:
      value: "Use this template for cross-repo, cross-team initiatives."
  - type: input
    id: summary
    attributes:
      label: Summary
      placeholder: One sentence summary
    validations:
      required: true
  - type: textarea
    id: problem
    attributes:
      label: Problem statement
      placeholder: What problem are we solving and why now?
    validations:
      required: true
  - type: textarea
    id: scope
    attributes:
      label: Scope
      placeholder: In-scope and out-of-scope items
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
      placeholder: |
        your-org/service-a
        your-org/service-b
    validations:
      required: true
  - type: input
    id: owners
    attributes:
      label: Primary owner(s)
      description: GitHub usernames or team slugs (e.g., @your-org/triage-team)
    validations:
      required: true
  - type: textarea
    id: success
    attributes:
      label: Success criteria / exit
      placeholder: Clear, testable outcomes
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline and milestones
      placeholder: Key dates and phases
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and dependencies
      placeholder: Blocking factors, external dependencies, fallback
  - type: textarea
    id: comms
    attributes:
      label: Comms plan
      placeholder: Who needs to know, when, and how
  - type: checkboxes
    id: reviews
    attributes:
      label: Reviews required
      options:
        - label: Security/Privacy
        - label: Legal/Compliance
        - label: Infra/Capacity
        - label: Change management
  - type: textarea
    id: tasks
    attributes:
      label: Tracking tasks
      description: Link or list tasks, e.g., "- [ ] owner/repo#123"
      placeholder: "- [ ] your-org/service-a#456"

2) Issue form: Org-wide incident
Path: .github/ISSUE_TEMPLATE/org-incident.yml

name: Org-wide incident
description: Track a multi-repo or multi-team incident.
title: "[Incident][SEV-<1|2|3>] <short title>"
labels: [org-wide, incident, needs-triage]
body:
  - type: dropdown
    id: severity
    attributes:
      label: Severity
      options: [SEV-1, SEV-2, SEV-3]
    validations:
      required: true
  - type: input
    id: started
    attributes:
      label: Start time (UTC)
      placeholder: "YYYY-MM-DD HH:MM"
    validations:
      required: true
  - type: textarea
    id: detection
    attributes:
      label: Detection
      placeholder: How was this detected?
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Impact
      placeholder: Users/systems affected, scope, blast radius
    validations:
      required: true
  - type: textarea
    id: mitigation
    attributes:
      label: Current status / Mitigation
      placeholder: Actions taken and next steps
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline of events
      placeholder: Time-stamped notes
  - type: textarea
    id: followups
    attributes:
      label: Follow-up actions
      placeholder: "- [ ] owner/repo#123 Root cause fix"

3) Issue form: RFC (proposal)
Path: .github/ISSUE_TEMPLATE/org-rfc.yml

name: RFC (org-wide)
description: Propose a cross-repo change for review.
title: "[RFC] <short title>"
labels: [org-wide, rfc, needs-triage]
body:
  - type: textarea
    id: summary
    attributes:
      label: Summary
    validations:
      required: true
  - type: textarea
    id: motivation
    attributes:
      label: Motivation
      placeholder: Why is this needed? Who benefits?
    validations:
      required: true
  - type: textarea
    id: design
    attributes:
      label: Design/Approach
      placeholder: Architecture, alternatives, rollout plan
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Affected repos/teams
      placeholder: Repos, APIs, contracts
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and mitigations
  - type: textarea
    id: metrics
    attributes:
      label: Success metrics

4) Issue template chooser config with contact links
Path: .github/ISSUE_TEMPLATE/config.yml

blank_issues_enabled: false
contact_links:
  - name: Propose an idea (Discussions)
    url: https://github.com/your-org/org-issues/discussions/new?category=ideas
    about: Start with a discussion for early proposals.
  - name: Security vulnerability
    url: https://github.com/your-org/.github/blob/main/SECURITY.md
    about: Please follow our security policy.
  - name: Support/help
    url: https://github.com/your-org/org-issues/discussions/new?category=support
    about: Use Discussions for Q&A and help.

5) Discussion template (optional, if Discussions are enabled)
Path: .github/DISCUSSION_TEMPLATE/org-proposal.yml

title: "[Proposal] <short title>"
labels: [org-wide, proposal]
body:
  - type: textarea
    id: context
    attributes:
      label: Context
  - type: textarea
    id: proposal
    attributes:
      label: Proposal
  - type: textarea
    id: feedback
    attributes:
      label: Questions for reviewers

6) Action: Auto-add org-wide issues to the organization Project
Path: .github/workflows/add-to-org-project.yml

name: Add org-wide issues to org project
on:
  issues:
    types: [opened, labeled]
jobs:
  add:
    if: contains(join(fromJson(toJson(github.event.issue.labels)).*.name, ','), 'org-wide')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@v1
        with:
          project-url: https://github.com/orgs/your-org/projects/1
          github-token: ${{ secrets.ORG_PROJECT_TOKEN }}

Notes:
- Use a fine-grained PAT with access to the organization Project as ORG_PROJECT_TOKEN. GITHUB_TOKEN usually can’t write to org-level Projects.
- Update project-url to your actual Project.

Recommended label set (create in org-issues and key repos)
- org-wide, initiative, epic, rfc, incident, sev-1, sev-2, sev-3, dependency, blocked, needs-triage, ready, in-progress, done, wontfix.

Rollout checklist
- Create or confirm an org .github repo and add the templates above.
- Create a central org-issues repo for filing org-wide items.
- Create an organization Project (Projects v2) with fields for Status, Priority, Owner, Target date.
- Add the workflow with ORG_PROJECT_TOKEN to auto-add labeled org-wide issues to the Project.
- Communicate the process: when to use Discussions vs Issues, SLAs, and who owns triage.

Want me to tailor these to your org and open a PR to your .github or org-issues repo? If yes, share:
- Your org name and whether you have a .github repo already
- The Project URL
- Preferred labels and team mentions
- Whether you want RFCs to start in Discussions or as issues

GitHub has a feature called **"Organization-wide Projects"** or **"Cross-repo Issues"** that allows you to track issues across multiple repositories within an organization. However, if you want an issue itself to be organization-wide, GitHub currently doesn't have a specific feature for "organization-wide issues." Instead, you can use the following strategies:

### 1. **Centralized Repository for Organization-wide Issues**
   - Create a dedicated repository in your organization specifically for tracking organization-wide issues (e.g., `organization/issues`).
   - Post the issue in that repository and reference it in other repositories using links.

### 2. **Use Issue Templates and Labels**
   - Set up an **issue template** in all repositories to guide contributors to file organization-wide issues in the central repository.
   - Use consistent labels like `org-wide` to tag issues that are relevant to the entire organization.

### 3. **Cross-link Issues**
   - If the issue affects multiple repositories, link related issues together by mentioning them using `#<issue-number>` or `owner/repo#<issue-number>`.

### 4. **GitHub Discussions**
   - If your organization has GitHub Discussions enabled, consider creating a discussion thread for organization-wide concerns rather than using issues.

### 5. **GitHub Projects**
   - Use organization-level **GitHub Projects** to track issues across multiple repositories.
   - Add issues from different repositories to a single **project board** to make it easier to manage.

### 6. **Automation with GitHub Actions**
   - Set up workflows to notify other repositories or teams when an organization-wide issue is created.

Here are concise best practices and ready-to-use templates to make “organization‑wide” work effective on GitHub.

Best practices
- Create a central “meta” repo for org-wide issues (e.g., your-org/org-issues). Keep process docs, labels, and workflows here.
- Use an org-level .github repo to share issue templates, discussion templates, and config across all repos.
- Standardize labels and severity: org-wide, initiative, epic, rfc, incident, sev-1/2/3, dependency, blocked, needs-triage.
- Track org-wide issues in an organization Project (Projects v2). Use fields like Status, Priority, Owner, Target date. Auto-add issues via Actions.
- Cross-link work: reference owner/repo#123 and use task lists - [ ] owner/repo#123 so progress rolls up.
- Gatekeep with templates: require impacted repos, owners, success criteria, timeline, risks, and comms.
- Agree on triage SLAs and ownership (a dedicated “Org Triage” team).
- Use Discussions for proposals (RFCs) and convert accepted proposals to issues.
- Automate routine steps: auto-label, add to org project, ping triage team, and create follow-up tracking tasks.

Where to put these
- Org-wide issue creation: central org-issues repo.
- Shared templates: org-level .github repository.
- Tracking: Organization Project (Projects v2).

Templates you can copy-paste

1) Issue form: Org-wide initiative
Path: .github/ISSUE_TEMPLATE/org-wide-initiative.yml

name: Org-wide initiative
description: Propose and track an initiative impacting multiple repositories/teams.
title: "[Org-wide] <short summary>"
labels: [org-wide, initiative, epic, needs-triage]
body:
  - type: markdown
    attributes:
      value: "Use this template for cross-repo, cross-team initiatives."
  - type: input
    id: summary
    attributes:
      label: Summary
      placeholder: One sentence summary
    validations:
      required: true
  - type: textarea
    id: problem
    attributes:
      label: Problem statement
      placeholder: What problem are we solving and why now?
    validations:
      required: true
  - type: textarea
    id: scope
    attributes:
      label: Scope
      placeholder: In-scope and out-of-scope items
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
      placeholder: |
        your-org/service-a
        your-org/service-b
    validations:
      required: true
  - type: input
    id: owners
    attributes:
      label: Primary owner(s)
      description: GitHub usernames or team slugs (e.g., @your-org/triage-team)
    validations:
      required: true
  - type: textarea
    id: success
    attributes:
      label: Success criteria / exit
      placeholder: Clear, testable outcomes
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline and milestones
      placeholder: Key dates and phases
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and dependencies
      placeholder: Blocking factors, external dependencies, fallback
  - type: textarea
    id: comms
    attributes:
      label: Comms plan
      placeholder: Who needs to know, when, and how
  - type: checkboxes
    id: reviews
    attributes:
      label: Reviews required
      options:
        - label: Security/Privacy
        - label: Legal/Compliance
        - label: Infra/Capacity
        - label: Change management
  - type: textarea
    id: tasks
    attributes:
      label: Tracking tasks
      description: Link or list tasks, e.g., "- [ ] owner/repo#123"
      placeholder: "- [ ] your-org/service-a#456"

2) Issue form: Org-wide incident
Path: .github/ISSUE_TEMPLATE/org-incident.yml

name: Org-wide incident
description: Track a multi-repo or multi-team incident.
title: "[Incident][SEV-<1|2|3>] <short title>"
labels: [org-wide, incident, needs-triage]
body:
  - type: dropdown
    id: severity
    attributes:
      label: Severity
      options: [SEV-1, SEV-2, SEV-3]
    validations:
      required: true
  - type: input
    id: started
    attributes:
      label: Start time (UTC)
      placeholder: "YYYY-MM-DD HH:MM"
    validations:
      required: true
  - type: textarea
    id: detection
    attributes:
      label: Detection
      placeholder: How was this detected?
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Impact
      placeholder: Users/systems affected, scope, blast radius
    validations:
      required: true
  - type: textarea
    id: mitigation
    attributes:
      label: Current status / Mitigation
      placeholder: Actions taken and next steps
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline of events
      placeholder: Time-stamped notes
  - type: textarea
    id: followups
    attributes:
      label: Follow-up actions
      placeholder: "- [ ] owner/repo#123 Root cause fix"

3) Issue form: RFC (proposal)
Path: .github/ISSUE_TEMPLATE/org-rfc.yml

name: RFC (org-wide)
description: Propose a cross-repo change for review.
title: "[RFC] <short title>"
labels: [org-wide, rfc, needs-triage]
body:
  - type: textarea
    id: summary
    attributes:
      label: Summary
    validations:
      required: true
  - type: textarea
    id: motivation
    attributes:
      label: Motivation
      placeholder: Why is this needed? Who benefits?
    validations:
      required: true
  - type: textarea
    id: design
    attributes:
      label: Design/Approach
      placeholder: Architecture, alternatives, rollout plan
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Affected repos/teams
      placeholder: Repos, APIs, contracts
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and mitigations
  - type: textarea
    id: metrics
    attributes:
      label: Success metrics

4) Issue template chooser config with contact links
Path: .github/ISSUE_TEMPLATE/config.yml

blank_issues_enabled: false
contact_links:
  - name: Propose an idea (Discussions)
    url: https://github.com/your-org/org-issues/discussions/new?category=ideas
    about: Start with a discussion for early proposals.
  - name: Security vulnerability
    url: https://github.com/your-org/.github/blob/main/SECURITY.md
    about: Please follow our security policy.
  - name: Support/help
    url: https://github.com/your-org/org-issues/discussions/new?category=support
    about: Use Discussions for Q&A and help.

5) Discussion template (optional, if Discussions are enabled)
Path: .github/DISCUSSION_TEMPLATE/org-proposal.yml

title: "[Proposal] <short title>"
labels: [org-wide, proposal]
body:
  - type: textarea
    id: context
    attributes:
      label: Context
  - type: textarea
    id: proposal
    attributes:
      label: Proposal
  - type: textarea
    id: feedback
    attributes:
      label: Questions for reviewers

6) Action: Auto-add org-wide issues to the organization Project
Path: .github/workflows/add-to-org-project.yml

name: Add org-wide issues to org project
on:
  issues:
    types: [opened, labeled]
jobs:
  add:
    if: contains(join(fromJson(toJson(github.event.issue.labels)).*.name, ','), 'org-wide')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@v1
        with:
          project-url: https://github.com/orgs/your-org/projects/1
          github-token: ${{ secrets.ORG_PROJECT_TOKEN }}

Notes:
- Use a fine-grained PAT with access to the organization Project as ORG_PROJECT_TOKEN. GITHUB_TOKEN usually can’t write to org-level Projects.
- Update project-url to your actual Project.

Recommended label set (create in org-issues and key repos)
- org-wide, initiative, epic, rfc, incident, sev-1, sev-2, sev-3, dependency, blocked, needs-triage, ready, in-progress, done, wontfix.

Rollout checklist
- Create or confirm an org .github repo and add the templates above.
- Create a central org-issues repo for filing org-wide items.
- Create an organization Project (Projects v2) with fields for Status, Priority, Owner, Target date.
- Add the workflow with ORG_PROJECT_TOKEN to auto-add labeled org-wide issues to the Project.
- Communicate the process: when to use Discussions vs Issues, SLAs, and who owns triage.

Want me to tailor these to your org and open a PR to your .github or org-issues repo? If yes, share:
- Your org name and whether you have a .github repo already
- The Project URL
- Preferred labels and team mentions
- Whether you want RFCs to start in Discussions or as issues

GitHub has a feature called **"Organization-wide Projects"** or **"Cross-repo Issues"** that allows you to track issues across multiple repositories within an organization. However, if you want an issue itself to be organization-wide, GitHub currently doesn't have a specific feature for "organization-wide issues." Instead, you can use the following strategies:

### 1. **Centralized Repository for Organization-wide Issues**
   - Create a dedicated repository in your organization specifically for tracking organization-wide issues (e.g., `organization/issues`).
   - Post the issue in that repository and reference it in other repositories using links.

### 2. **Use Issue Templates and Labels**
   - Set up an **issue template** in all repositories to guide contributors to file organization-wide issues in the central repository.
   - Use consistent labels like `org-wide` to tag issues that are relevant to the entire organization.

### 3. **Cross-link Issues**
   - If the issue affects multiple repositories, link related issues together by mentioning them using `#<issue-number>` or `owner/repo#<issue-number>`.

### 4. **GitHub Discussions**
   - If your organization has GitHub Discussions enabled, consider creating a discussion thread for organization-wide concerns rather than using issues.

### 5. **GitHub Projects**
   - Use organization-level **GitHub Projects** to track issues across multiple repositories.
   - Add issues from different repositories to a single **project board** to make it easier to manage.

### 6. **Automation with GitHub Actions**
   - Set up workflows to notify other repositories or teams when an organization-wide issue is created.

Here are concise best practices and ready-to-use templates to make “organization‑wide” work effective on GitHub.

Best practices
- Create a central “meta” repo for org-wide issues (e.g., your-org/org-issues). Keep process docs, labels, and workflows here.
- Use an org-level .github repo to share issue templates, discussion templates, and config across all repos.
- Standardize labels and severity: org-wide, initiative, epic, rfc, incident, sev-1/2/3, dependency, blocked, needs-triage.
- Track org-wide issues in an organization Project (Projects v2). Use fields like Status, Priority, Owner, Target date. Auto-add issues via Actions.
- Cross-link work: reference owner/repo#123 and use task lists - [ ] owner/repo#123 so progress rolls up.
- Gatekeep with templates: require impacted repos, owners, success criteria, timeline, risks, and comms.
- Agree on triage SLAs and ownership (a dedicated “Org Triage” team).
- Use Discussions for proposals (RFCs) and convert accepted proposals to issues.
- Automate routine steps: auto-label, add to org project, ping triage team, and create follow-up tracking tasks.

Where to put these
- Org-wide issue creation: central org-issues repo.
- Shared templates: org-level .github repository.
- Tracking: Organization Project (Projects v2).

Templates you can copy-paste

1) Issue form: Org-wide initiative
Path: .github/ISSUE_TEMPLATE/org-wide-initiative.yml

name: Org-wide initiative
description: Propose and track an initiative impacting multiple repositories/teams.
title: "[Org-wide] <short summary>"
labels: [org-wide, initiative, epic, needs-triage]
body:
  - type: markdown
    attributes:
      value: "Use this template for cross-repo, cross-team initiatives."
  - type: input
    id: summary
    attributes:
      label: Summary
      placeholder: One sentence summary
    validations:
      required: true
  - type: textarea
    id: problem
    attributes:
      label: Problem statement
      placeholder: What problem are we solving and why now?
    validations:
      required: true
  - type: textarea
    id: scope
    attributes:
      label: Scope
      placeholder: In-scope and out-of-scope items
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
      placeholder: |
        your-org/service-a
        your-org/service-b
    validations:
      required: true
  - type: input
    id: owners
    attributes:
      label: Primary owner(s)
      description: GitHub usernames or team slugs (e.g., @your-org/triage-team)
    validations:
      required: true
  - type: textarea
    id: success
    attributes:
      label: Success criteria / exit
      placeholder: Clear, testable outcomes
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline and milestones
      placeholder: Key dates and phases
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and dependencies
      placeholder: Blocking factors, external dependencies, fallback
  - type: textarea
    id: comms
    attributes:
      label: Comms plan
      placeholder: Who needs to know, when, and how
  - type: checkboxes
    id: reviews
    attributes:
      label: Reviews required
      options:
        - label: Security/Privacy
        - label: Legal/Compliance
        - label: Infra/Capacity
        - label: Change management
  - type: textarea
    id: tasks
    attributes:
      label: Tracking tasks
      description: Link or list tasks, e.g., "- [ ] owner/repo#123"
      placeholder: "- [ ] your-org/service-a#456"

2) Issue form: Org-wide incident
Path: .github/ISSUE_TEMPLATE/org-incident.yml

name: Org-wide incident
description: Track a multi-repo or multi-team incident.
title: "[Incident][SEV-<1|2|3>] <short title>"
labels: [org-wide, incident, needs-triage]
body:
  - type: dropdown
    id: severity
    attributes:
      label: Severity
      options: [SEV-1, SEV-2, SEV-3]
    validations:
      required: true
  - type: input
    id: started
    attributes:
      label: Start time (UTC)
      placeholder: "YYYY-MM-DD HH:MM"
    validations:
      required: true
  - type: textarea
    id: detection
    attributes:
      label: Detection
      placeholder: How was this detected?
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Impact
      placeholder: Users/systems affected, scope, blast radius
    validations:
      required: true
  - type: textarea
    id: mitigation
    attributes:
      label: Current status / Mitigation
      placeholder: Actions taken and next steps
    validations:
      required: true
  - type: textarea
    id: repos
    attributes:
      label: Impacted repositories
      description: One per line as owner/repo
    validations:
      required: true
  - type: textarea
    id: timeline
    attributes:
      label: Timeline of events
      placeholder: Time-stamped notes
  - type: textarea
    id: followups
    attributes:
      label: Follow-up actions
      placeholder: "- [ ] owner/repo#123 Root cause fix"

3) Issue form: RFC (proposal)
Path: .github/ISSUE_TEMPLATE/org-rfc.yml

name: RFC (org-wide)
description: Propose a cross-repo change for review.
title: "[RFC] <short title>"
labels: [org-wide, rfc, needs-triage]
body:
  - type: textarea
    id: summary
    attributes:
      label: Summary
    validations:
      required: true
  - type: textarea
    id: motivation
    attributes:
      label: Motivation
      placeholder: Why is this needed? Who benefits?
    validations:
      required: true
  - type: textarea
    id: design
    attributes:
      label: Design/Approach
      placeholder: Architecture, alternatives, rollout plan
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Affected repos/teams
      placeholder: Repos, APIs, contracts
    validations:
      required: true
  - type: textarea
    id: risks
    attributes:
      label: Risks and mitigations
  - type: textarea
    id: metrics
    attributes:
      label: Success metrics

4) Issue template chooser config with contact links
Path: .github/ISSUE_TEMPLATE/config.yml

blank_issues_enabled: false
contact_links:
  - name: Propose an idea (Discussions)
    url: https://github.com/your-org/org-issues/discussions/new?category=ideas
    about: Start with a discussion for early proposals.
  - name: Security vulnerability
    url: https://github.com/your-org/.github/blob/main/SECURITY.md
    about: Please follow our security policy.
  - name: Support/help
    url: https://github.com/your-org/org-issues/discussions/new?category=support
    about: Use Discussions for Q&A and help.

5) Discussion template (optional, if Discussions are enabled)
Path: .github/DISCUSSION_TEMPLATE/org-proposal.yml

title: "[Proposal] <short title>"
labels: [org-wide, proposal]
body:
  - type: textarea
    id: context
    attributes:
      label: Context
  - type: textarea
    id: proposal
    attributes:
      label: Proposal
  - type: textarea
    id: feedback
    attributes:
      label: Questions for reviewers

6) Action: Auto-add org-wide issues to the organization Project
Path: .github/workflows/add-to-org-project.yml

name: Add org-wide issues to org project
on:
  issues:
    types: [opened, labeled]
jobs:
  add:
    if: contains(join(fromJson(toJson(github.event.issue.labels)).*.name, ','), 'org-wide')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@v1
        with:
          project-url: https://github.com/orgs/your-org/projects/1
          github-token: ${{ secrets.ORG_PROJECT_TOKEN }}

Notes:
- Use a fine-grained PAT with access to the organization Project as ORG_PROJECT_TOKEN. GITHUB_TOKEN usually can’t write to org-level Projects.
- Update project-url to your actual Project.

Recommended label set (create in org-issues and key repos)
- org-wide, initiative, epic, rfc, incident, sev-1, sev-2, sev-3, dependency, blocked, needs-triage, ready, in-progress, done, wontfix.

Rollout checklist
- Create or confirm an org .github repo and add the templates above.
- Create a central org-issues repo for filing org-wide items.
- Create an organization Project (Projects v2) with fields for Status, Priority, Owner, Target date.
- Add the workflow with ORG_PROJECT_TOKEN to auto-add labeled org-wide issues to the Project.
- Communicate the process: when to use Discussions vs Issues, SLAs, and who owns triage.

Want me to tailor these to your org and open a PR to your .github or org-issues repo? If yes, share:
- Your org name and whether you have a .github repo already
- The Project URL
- Preferred labels and team mentions
- Whether you want RFCs to start in Discussions or as issues

Short answer: It can, but it’s not recommended.

What the .github repo is best for
- Shared, org-wide “community health” and templates:
  - ISSUE_TEMPLATE/*.yml and ISSUE_TEMPLATE/config.yml (with contact_links)
  - PULL_REQUEST_TEMPLATE
  - CONTRIBUTING.md, CODE_OF_CONDUCT.md, SECURITY.md, SUPPORT.md, FUNDING.yml
  - Workflow templates in .github/workflow-templates (for repo creators to use, not auto-applied)
- Lightweight policy/process docs (README explaining how to use the templates)

Why not use it as your central issues repo too
- Visibility/privacy tradeoff:
  - .github often needs to be public to provide defaults to public repos, which makes its issues public too.
  - If you need private/org-internal tracking, this is a problem.
- Mental model:
  - People expect .github to hold defaults, not conversations or planning; it’s “special” and can be confusing for contributors.
- Separation of concerns:
  - Clean governance and access control are easier with a dedicated org-issues repo.

Recommended setup
- Keep .github for shared templates and policies only.
- Create a separate org-issues (or governance, meta, platform) repo for org-wide issues, RFCs, incidents, and planning.
- Use ISSUE_TEMPLATE/config.yml in .github to route users to the correct place via contact_links.
- Track everything across repos in an organization-level Project (Projects v2).

If you still want dual-purpose
- Make an intentional choice about visibility:
  - Public .github: assume issues are public; do not use for sensitive incidents.
  - Private .github: templates won’t apply to public repos.
- Enable Issues (and Discussions, if desired) on .github.
- Add clear README sections:
  - “About this repo” (templates + org-wide intake), “When to open an issue here,” “When to use Discussions,” SLAs, and owners.
- Set up labels and templates scoped for org-wide work (org-wide, initiative, rfc, incident, sev-1/2/3, needs-triage).
- Use ISSUE_TEMPLATE/config.yml contact_links to steer most users to the right flows (security policy, support, ideas, org Project, etc.).
- Automate:
  - Action to auto-add issues labeled org-wide to your org Project.
  - Auto-assign or notify an org triage team.

Quick decision tree
- Need private org-wide tracking and public templates? Use two repos (.github public + org-issues private).
- All work is public and non-sensitive? Dual-use is possible, but still consider a separate org-issues repo for clarity.

If you share your org’s constraints (public vs private, whether you already have an org Project, and who should triage), I can tailor the config files and templates and provide ready-to-commit files.
