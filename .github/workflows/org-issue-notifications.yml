name: Organization-Wide Issue Notifications

on:
  issues:
    types: [opened, labeled]

jobs:
  notify:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'org-wide')

    steps:
      - name: Check if this is an org-wide issue
        id: check_labels
        run: |
          echo "Issue has org-wide label"

      - name: Extract issue details
        id: issue_details
        run: |
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "issue_title=${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
          echo "issue_url=${{ github.event.issue.html_url }}" >> $GITHUB_OUTPUT
          echo "issue_author=${{ github.event.issue.user.login }}" >> $GITHUB_OUTPUT

      - name: Determine severity and urgency
        id: categorize
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ',') }}"
          echo "labels=$LABELS"

          if echo "$LABELS" | grep -q "urgent\|critical"; then
            echo "priority=urgent" >> $GITHUB_OUTPUT
            echo "emoji=🚨" >> $GITHUB_OUTPUT
          elif echo "$LABELS" | grep -q "high-priority\|security"; then
            echo "priority=high" >> $GITHUB_OUTPUT
            echo "emoji=⚠️" >> $GITHUB_OUTPUT
          else
            echo "priority=normal" >> $GITHUB_OUTPUT
            echo "emoji=📢" >> $GITHUB_OUTPUT
          fi

      - name: Post comment with notification info
        uses: actions/github-script@v7
        with:
          script: |
            const priority = '${{ steps.categorize.outputs.priority }}';
            const emoji = '${{ steps.categorize.outputs.emoji }}';

            let message = `${emoji} **Organization-Wide Issue Alert**\n\n`;
            message += `This issue has been tagged as organization-wide and will be tracked centrally.\n\n`;
            message += `**Priority:** ${priority}\n`;
            message += `**Labels:** ${{ join(github.event.issue.labels.*.name, ', ') }}\n\n`;

            if (priority === 'urgent') {
              message += `⚠️ This is marked as **URGENT** and requires immediate attention from relevant teams.\n\n`;
            }

            message += `### Next Steps:\n`;
            message += `- [ ] Review and triage this issue\n`;
            message += `- [ ] Identify affected teams and repositories\n`;
            message += `- [ ] Create linked issues in affected repositories if needed\n`;
            message += `- [ ] Add to relevant project boards\n\n`;
            message += `---\n`;
            message += `*This notification was automatically generated. Teams can subscribe to notifications by watching this repository.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Add to project (if configured)
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            // This is a placeholder for adding issues to GitHub Projects
            // Configure PROJECT_ID in repository secrets to enable this
            console.log('Project integration can be configured with organization projects');

      - name: Create notification summary
        run: |
          echo "## 📢 Organization-Wide Issue Notification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Issue:** #${{ steps.issue_details.outputs.issue_number }} - ${{ github.event.issue.title }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** @${{ steps.issue_details.outputs.issue_author }}" >> $GITHUB_STEP_SUMMARY
          echo "**Priority:** ${{ steps.categorize.outputs.priority }}" >> $GITHUB_STEP_SUMMARY
          echo "**Labels:** ${{ join(github.event.issue.labels.*.name, ', ') }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Issue](${{ steps.issue_details.outputs.issue_url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Notification Methods" >> $GITHUB_STEP_SUMMARY
          echo "- Comment added to issue" >> $GITHUB_STEP_SUMMARY
          echo "- Notification sent to repository watchers" >> $GITHUB_STEP_SUMMARY
          echo "- Summary generated for workflow visibility" >> $GITHUB_STEP_SUMMARY
